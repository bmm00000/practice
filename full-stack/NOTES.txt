url: uniform resource locator

https (hyper text transfer protocol secure): the 'language' client and server speak. secure means that the communication is encrypted (the browser authomatically adds 'https://...' when you enter the url)

IP (Internet Protocol) address: a unique identifier of network devices for establishing connections and talking with each other. domains are more readible by humans, but are not used to establish connections and sending requests, although if you knew the IP address of a website, you can use it insted of using the domain and it would work (all devices that are part of the internet need an IP address, but for example, your computer, if it's not hosting a website, doesn't have a humanly readible domain; every device has an IP address, but not every device has a domain, that's why we use IP addresses to establish conections). that's why we have special servers, operated by global organizations: DNS servers (domain name system). these servers contain translation tables between domains and ip addresses that belong to these domains (the ip addresses of the remote computers that host the websites that belong to certain domains).

when you enter a url in your browser, your browser first talks to a DNS server to translate the domain into an ip address, and then once the ip address was returned, then your browser sends the request to that remote machine (the server identified with the ip address that is serving that website)

even though your computer has an ip address (if connected to the internet), you don't have to worry that other user will access it, since typically it doesn't allow incoming external traffic from other users. to host a website, appropriate 'entry points' (Ports) must be opened in the network and your computer must be configured as a web server.

A lot of websites can be visited via different domains. For example, the Amazon website can be visited via amazon.com but also via www.amazon.com. Both addresses can be entered in the browser and you will reach the same website.

So what's the difference?

Especially in the earlier days of the internet, it was also often called the "world wide web" (or: "www"). You still hear that term quite a bit and it's this term, that explains why some websites support such a "www" prefix in the domain.

Technically, www.amazon.com is called a "subdomain" of the "root domain" amazon.com. As the operator of a website and the owner of a domain, you can register any subdomains you want to. You could also register mysite.amazon.com, if you were the owner of the amazon.com domain. And you can then configure your web server such, that your website is served, if users enter mysite.amazon.com.

That's what many (but not all) websites do with the "www" subdomain: They register it and configure it such, that it also points at the main website.

It's not required and not all websites have it. Most users also don't type "www.somewebsite.com" manually anymore - instead just the root domain is entered in many cases.

the different html tags give different instructions to the browser (what content has to be a header, a paragraph, etc.)

html is a markup language: a language that is there to add up some extra annotation/meaning/description to the content that you have in your page.

html instructs the browser about content, its structure and its meaning.

remember, browsers are very forgiving, that's why content will be displayed as plain text, even if you don't use html tags.

html attributes allow to to add extra configuration to the html element. different html elements support different attributes, for example, basically all html elements support the 'style' attribute to add css styling to an element (remember, an html atribute has a name, and a value). for example: style="font-family: sans-serif"

css has properties and values for these properties.

remember, we don't use an html element (eg. h1) because we want certain styling (bold letters, etc.) (with css, we could make a paragraph with bold letters, or we could make an h1 look like a paragraph, etc.). we use it html elements because we want to convey meaning to search engines, screen readers, etc.

you can add the 'style' attribute to basically any html element. we say 'basically' because later we will talk about a few elements that can't be styled because they are not visible.

under the 'color' property, we have some named colors (for example, 'red', 'blue' etc.) but we actually have millions of colors at our disposal. we have hex codes (three pairs of numbers that together refer to combinations of red, green and blue) for colors becase we have more than 16 million colors, and we would have very long numbers if we used the decimal system. 
you can google 'color picker' and manually select the color that you want (vscode also gives you this possibility, and you can also see the colors in the 3 different denominations (hex code, rgb, or hsl)) (see 'colors.pdf').

code formatter extension: prettier (set it under 'default formatter')

if you want to find what styles are applied into an element, you could check the source code, but what about the default styles applied by the browser? you can check that in devtools. 'user agent' styles will tell you what default styles are applied by the browser, and 'element.style' will tell you what styles you applied (see screenshot)

