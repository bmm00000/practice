side effects should not go directly into the component function because that will most likely create bugs, infinite loops, or too many http requests, etc. therefore, we have a tool for handling side effects, that's a special react hook: useEffect.

initially, when you reload the app, you lose the log in status. in reality, what you would do is send an http request to the backend and get some login data (for example a token that identifies the user as authenticated). but in our case, since we manage the loggedIn status as state, when you reload your application, your entire react script restarts and all variables from the last execution are lost (this is how the web, and scripts, and the browser works). that's why it would be nice to store the data somewhere where it persists the reload, and when the app starts we check if the data was persisted, and if it is we log in the user authomatically